@using MyMvcApp.Helpers
@model IEnumerable<MyMvcApp.Models.ViewModels.PostViewModel>
<h1>Search Posts</h1>

<form method="get" id="searchForm">
    <input type="text" name="query" value="@ViewBag.Query" />
    <button type="submit">Search</button>
</form>

<div id="postsList">
    @if (Model != null && Model.Any())
    {
        foreach (var item in Model)
        {
            <div class="post-box" style="border: 1px solid #ccc; padding: 15px; margin-bottom: 20px;">
                <div class="post-title" style="font-weight: bold;">@item.Post.Title</div>
                <div class="post-body" style="font-weight: normal;">
                    @Html.Raw(item.Post.Body.StripHtmlAndTruncate(140))
                </div>
                <br>
                <div class="post-count"><strong>Votes: </strong>@item.Post.Score</div>
                <div class="post-answers"><strong>Answer Count: </strong>@item.Post.Score</div>
                <div class="post-owner"><strong>Posted by: </strong>@item.DisplayName</div>
                <div class="rep"><strong>Poster Reputation: </strong>@item.ReputationScore</div>
                <div class="post-badges">
                    <strong>Badges: </strong>
                    @if (item.Badges.Any())
                    {
                        @string.Join(", ", item.Badges)
                    }
                    else
                    {
                        <text>None</text>
                    }
                </div>

            </div>
        }
    }
    else
    {
        <p>No results found.</p>
    }
</div>

@if (ViewBag.CurrentPage < ViewBag.TotalPages)
{
    <button id="loadMore">Show More</button>
}

@section Scripts {
    <script>
        // Ensure your JavaScript function for stripping HTML and truncating is defined here or included from an external JS file

        document.getElementById("loadMore").addEventListener("click", function() {
            var currentPage = @ViewBag.CurrentPage + 1;
            var totalPages = @ViewBag.TotalPages;
            var query = '@ViewBag.Query';

            if (currentPage <= totalPages) {
                var encodedQuery = encodeURIComponent(query);
                fetch(`/Search/Index?query=${encodedQuery}&page=${currentPage}`)
                    .then(response => response.text())
                    .then(html => {
                        var parser = new DOMParser();
                        var doc = parser.parseFromString(html, 'text/html');
                        var newPostsHtml = doc.querySelectorAll(".post-box");
                        newPostsHtml.forEach(function(element) {
                            var bodyElement = element.querySelector(".post-body");
                            var text = bodyElement.textContent || bodyElement.innerText;
                            bodyElement.textContent = stripHtmlAndTruncate(text, 140); // Use the JS function to strip and truncate
                            document.getElementById("postsList").appendChild(element);
                        });

                        if (currentPage >= totalPages) {
                            document.getElementById("loadMore").style.display = 'none';
                        }
                    });
            }
        });

        function stripHtmlAndTruncate(html, length) {
            var text = html.replace(/<[^>]*>/g, ''); // Strip HTML tags
            return text.length <= length ? text : text.substr(0, length) + "...";
        }
    </script>
}
